{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","AppHashLips.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectSuccess","connectFailed","connect","silent","fetch","headers","Accept","abiResponse","json","abi","configResponse","CONFIG","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","eth","getAccounts","length","isConnected","request","method","accounts","NETWORK","ID","SmartContractObj","CONTRACT_ADDRESS","on","updateAccount","location","reload","NAME","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledLink","button","img","MintCompleted","config","style","textAlign","color","NFT_NAME","target","href","MARKETPLACE_LINK","MARKETPLACE","App","useDispatch","useSelector","useState","claimingNft","setClaimingNft","setFeedback","mintAmount","SCAN_LINK","SYMBOL","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","SHOW_BACKGROUND","SET_CONFIG","getData","getConfig","useEffect","input","len","walletNotConnected","saleEnded","Number","className","onClick","e","preventDefault","disabled","substring","marginBottom","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","StyledButton","StyledRoundButton","ResponsiveWrapper","StyledLogo","StyledImg","feedback","setMintAmount","padding","backgroundColor","alt","src","borderRadius","border","boxShadow","fontSize","fontWeight","lineHeight","newMintAmount","decrementMintAmount","incrementMintAmount","transform","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","includes","AppHashLips","document","getElementById"],"mappings":"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","file":"static/js/main.d4a5d272.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = ({ silent = false } = {}) => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n\n      // silent try to connect without forcing metamask prompt\n      // bail if not connected\n      let isConnected = ( await web3.eth.getAccounts() ).length > 0\n      if (silent && !isConnected) {\n        return\n      }\n\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction MintCompleted({ config }) {\n  return (\n    <>\n      <s.TextTitle style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}>\n        The sale has ended.\n      </s.TextTitle>\n      <s.TextDescription\n        style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n      >\n        You can still find {config.NFT_NAME} on\n      </s.TextDescription>\n      <s.SpacerSmall />\n      <StyledLink target={\"_blank\"} href={config.MARKETPLACE_LINK}>\n        {config.MARKETPLACE}\n      </StyledLink>\n    </>\n  );\n}\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(\n    `Select how many SOCKS! , then BUY your SOCKS!`\n  );\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Washing and Drying your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `Your ${CONFIG.NFT_NAME} are fresh from the dryer! Visit Opensea.io to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 10) {\n      newMintAmount = 10;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  useEffect(() => {\n    dispatch(connect({ silent: true }));\n  }, []);\n\n  let walletNotConnected =\n    blockchain.account === \"\" || blockchain.smartContract === null;\n\n  let saleEnded = Number(data.totalSupply) >= CONFIG.MAX_SUPPLY;\n\n  return (\n    <>\n      <div className=\"wrap\">\n        <nav className=\"p-3\">\n          <div className=\"d-flex align-items-center\">\n            <div></div>\n            <div className=\"d-flex\" style={{flex: 1}}>\n              <div className=\"logo logo--header\"></div>\n              <div className=\"h4\">BasicNeeds</div>\n            </div>\n            {walletNotConnected ? (\n              <>\n                <button\n                  className=\"btn btn-secondary ml-auto\"\n                  type=\"button\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    dispatch(connect());\n                    getData();\n                  }}\n                >\n                  Connect Wallet\n                </button>\n              </>\n            ) : (\n              <button\n                className=\"btn btn-secondary ml-auto\"\n                type=\"button\"\n                disabled\n                onClick={(e) => {\n                  e.preventDefault();\n                  dispatch(connect());\n                  getData();\n                }}\n              >\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n              </button>\n            )}\n          </div>\n        </nav>\n        <main className=\"fluid-container\">\n          <section className=\"section-1 p-3\" style={{ marginBottom: \"4rem\" }}>\n            <div className=\"d-flex flex-column align-items-center\">\n              <h2 className=\"p-3\">A Better Way To Send Donations</h2>\n              <h6 className=\"font-weight-bold\">\n                100% of Basic Needs: SOCKS! revenue goes directly to purchasing\n                Socks for shelters around the US.\n              </h6>\n              <p className=\"w-75 mb-5\">\n                Each transaction is transparent, and all ETH may be found at\n                socks.basicneeds.eth where donation receipts will be saved as an\n                NFT [Collection Coming Soon] to showcase complete transparency\n                of your charitable spirit!\n              </p>\n\n              <div className=\"mint-card card d-flex flex-column align-items-center p-5\">\n                {walletNotConnected ? (\n                  <>\n                    <div>\n                      <button\n                        className=\"btn btn-secondary ml-auto\"\n                        type=\"button\"\n                        onClick={(e) => {\n                          e.preventDefault();\n                          dispatch(connect());\n                          getData();\n                        }}\n                      >\n                        Connect Wallet\n                      </button>\n                    </div>\n                      {blockchain.errorMsg !== \"\" ? (\n                        <div>\n                          <s.SpacerSmall />\n                          <s.TextDescription\n                            style={{\n                              textAlign: \"center\",\n                              color: \"red\",\n                            }}\n                          >\n                            {blockchain.errorMsg}\n                          </s.TextDescription>\n                        </div>\n                      ) : null}\n                  </>\n                ) : saleEnded ? (\n                  <MintCompleted config={CONFIG} />\n                ) : (\n                  <>\n                    <div className=\"count h1 text-accent font-weight-bold\">\n                      {data.totalSupply}/{CONFIG.MAX_SUPPLY}\n                    </div>\n                    <hr />\n                    <div className=\"price\">\n                      <span className=\"font-weight-bold\">\n                        {CONFIG.DISPLAY_COST} {CONFIG.NETWORK.SYMBOL}\n                      </span>{\" \"}\n                      / {CONFIG.SYMBOL}\n                    </div>\n                    <small className=\"font-italic mb-4\">\n                      (GAS NOT INCLUDED)\n                    </small>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-primary font-weight-bold\"\n                      disabled={claimingNft ? 1 : 0}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        claimNFTs();\n                        getData();\n                      }}\n                    >\n                      {claimingNft ? \"BUSY\" : \"MINT\"}\n                    </button>\n                  </>\n                )}\n              </div>\n            </div>\n          </section>\n          <section className=\"section-2 p-5\">\n            <div className=\"rotated-square\"></div>\n            <div className=\"d-flex flex-column align-items-center\">\n              <h2>Meet the SOCKS! Team</h2>\n              <p className=\"mb-4\">\n                SOCKS! was brought to you by these individuals of a larger\n                collaboration with <a href=\"basicneeds\">Basic Needs</a>.\n              </p>\n              <div className=\"row\">\n                <div className=\"col mb-5\">\n                  <div className=\"person-image person-image--1 mb-3\"></div>\n                  <div className=\"h5\">Chelsea</div>\n                  <div className=\"text-accent\">Artistic Director</div>\n                </div>\n                <div className=\"col mb-5\">\n                  <div className=\"person-image person-image--2 mb-3\"></div>\n                  <div className=\"h5\">Pandora</div>\n                  <div className=\"text-accent\">Web Designer</div>\n                </div>\n                <div className=\"col mb-5\">\n                  <div className=\"person-image person-image--3 mb-3\"></div>\n                  <div className=\"h5\">Ryan</div>\n                  <div className=\"text-accent\">Web3 Developer</div>\n                </div>\n              </div>\n            </div>\n          </section>\n        </main>\n      </div>\n      <footer>\n        <div className=\"d-flex flex-column align-items-center p-3\">\n          <div className=\"d-flex justify-content-center\">\n            <div className=\"logo\"></div>\n            <div className=\"h6\">BasicNeeds</div>\n          </div>\n        </div>\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(\n    `Select how many SOCKS! , then BUY your SOCKS!`\n  );\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Washing and Drying your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `Your ${CONFIG.NFT_NAME} are fresh from the dryer! Visit Opensea.io to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 10) {\n      newMintAmount = 10;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n      >\n        <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg alt={\"example\"} src={\"/config/images/example.gif\"} />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 24,\n              border: \"4px dashed var(--secondary)\",\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n            </s.TextTitle>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}\n            >\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n              </StyledLink>\n            </s.TextDescription>\n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n                  {CONFIG.NETWORK.SYMBOL}.\n                </s.TextTitle>\n                <s.SpacerXSmall />\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  Excluding gas fees.\n                </s.TextDescription>\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                (blockchain.smartContract === null && false) ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"BUSY\" : \"BUY\"}\n                      </StyledButton>\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg\n              alt={\"example\"}\n              src={\"/config/images/example.gif\"}\n              style={{ transform: \"scaleX(-1)\" }}\n            />\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            Please make sure you are connected to the right network (\n            {CONFIG.NETWORK.NAME} Mainnet) and the correct address. Please note:\n            Once you make the purchase, you cannot undo this action.\n          </s.TextDescription>\n          <s.SpacerSmall />\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\n            successfully mint your NFT. We recommend that you don't lower the\n            gas limit.\n          </s.TextDescription>\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport AppHashLips from \"./AppHashLips\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n// import \"./styles/reset.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles/styles.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    {window.location.href.includes(\"test\") ? <AppHashLips /> : <App />}\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}